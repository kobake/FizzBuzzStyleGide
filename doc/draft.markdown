『すごいFizzBuzzたのしく学ぼう』
==========================================

草稿
----

* 最もBasicな構造はIf分岐
    * 初歩は Input(x)が、3の倍数, 5の倍数, 15の倍数 かどうかを調べる方法
    * if - else でつないでいく方法は、評価順を考える必要がある
    * しかし、15の倍数は 3の倍数, 5の倍数の両方のフラグ立っていると考えられる
* 3, 5の符合をどのように保存するかという方法を考える
    * (1, 1) => 15, (1, 0) => 3, (0, 1) => 5と符合化できる
    * さらに、これらをbit(01, 10, 11) と考えると、(1, 2, 3) と変換できる
        * 00の場合は数値を返せば良い
    * 配列を繰り返すことで、これらを調べることも可能
        * 3の倍数の場所に1, 5の倍数の場所に1があればいい
        * [001], [00001] を繰り返して、これらを組み合わせる
        * あるいは15まで、3と5の倍数情報を保持するという方法もある
            * [1: 00, 2: 00,3: 01,4: 00,5: 10, 6: 01, 7...]
        * 文字列を配列として操作できるものなら可能
    * これらの符合を保存していく過程を「副作用」として抽象化することもできる
        * 関数合成するときのアプローチとかだと、この手の抽象化をするとよさげ
          * fizz(buzz(x)) 的なもの
        * Haskell -> Maybe FizzBuzzを参照
    * これら符合化した数値を文字列で置換してもよい
        * PHPの「仕様」だと、文字列からmethodを呼び出せるので熱い
        * BasicなIf構造とも言える -> 順番は工夫
* 繰り返しする方法には、繰り返し構文(while, forなど) , 再帰, 配列がある
    * 繰り返しは、「ある数になるまで繰り返す」という方法を取る
    * 再帰は、「ある数になるまで自己の関数を呼び出す」という方法を取る
    * 配列は、「それぞれの配列に対して関数を適応する」という方法を取る
    * ※ 見なくなったけど、GOTOは渋い（いわゆるラベルジャンプ)
